CREATE TABLE blog(
    blog_id INT GENERATED BY DEFAULT AS IDENTITY primary key ,
    title VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE blog_category(
    category_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR,
    blog_id INT references blog(blog_id)
);

CREATE TABLE blog_paragraph(
    paragraph_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    paragraph VARCHAR,
    blog_id INT references blog(blog_id)
);

CREATE TABLE blog_comment(
  comment_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  comment VARCHAR,
  blog_id INT references blog(blog_id)
);

CREATE TABLE blog_tag(
  tag_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  tag VARCHAR,
  blog_id INT references blog(blog_id)
);

CREATE TABLE blog_like(
   like_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   count INT,
   blog_id INT references blog(blog_id)
);

INSERT INTO blog(title)
    VALUES ('Meta Platforms plans to release free software that...');
INSERT INTO blog_paragraph(paragraph, blog_id)
    VALUES('The parent company of Facebook, Meta Platforms, is introducing software to help developers', 2);
INSERT INTO blog_category(name, blog_id)
    VALUES ('companies', 2);
INSERT INTO blog_like(count, blog_id)
    VALUES (100, 2);
INSERT INTO blog_tag(tag, blog_id)
    VALUES ('meta', 2);

SELECT title FROM blog
WHERE title LIKE('Meta%');

SELECT blog_category.name from blog
    JOIN blog_category ON blog.blog_id = blog_category.blog_id;


ALTER TABLE blog ADD COLUMN likes int;

CREATE TABLE blog_user (
    user_id BIGINT,
    blog_id BIGINT,
    PRIMARY KEY (user_id, blog_id),
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (blog_id) REFERENCES blog(blog_id)
);